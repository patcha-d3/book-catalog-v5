// App.jsx
import { useState } from "react";
import style from "./App.css";
import Modal from "./components/Modal.jsx";
import AddBook from "./components/AddBook.jsx";
import Book from "./book.jsx";
import BookFilter from "./components/BookFilter.jsx"; // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ import

function App() {
  const [books, setBooks] = useState([]);

  // ‚úÖ state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå
  const [filterCriteria, setFilterCriteria] = useState({
    author: "",
  });

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏°
  const toggleSelect = (isbn13) => {
    setBooks((prev) =>
      prev.map((book) =>
        book.isbn13 === isbn13
          ? { ...book, selected: !book.selected }
          : { ...book, selected: false }
      )
    );
  };

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà
  const handleAddBook = (newBook) => {
    const withDefaults = {
      ...newBook,
      isbn13:
        (window.crypto && crypto.randomUUID && crypto.randomUUID()) ||
        String(Date.now()),
      selected: false,
      image: newBook.url || "https://via.placeholder.com/150x200?text=Book",
      url: newBook.url || "#",
      isUserAdded: true, // üëà ‡πÉ‡∏ä‡πâ flag ‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°
    };
    setBooks((prev) => [...prev, withDefaults]);
  };

  // ‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const handleDeleteBook = () => {
    const selectedBook = books.find((b) => b.selected);
    if (!selectedBook) {
      alert("Please select a book to delete.");
      return;
    }
    setBooks((prev) => prev.filter((b) => b.isbn13 !== selectedBook.isbn13));
  };

  // Update = no-op
  const handleUpdateBook = () => {
    const selectedBook = books.find((b) => b.selected);
    if (!selectedBook) {
      alert("Please select a book to update.");
      return;
    }
    alert("Update feature coming soon!");
  };

  // ‚úÖ handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå
  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilterCriteria((prev) => ({ ...prev, [name]: value }));
  };

  // ‚úÖ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô (unique + ‡πÄ‡∏£‡∏µ‡∏¢‡∏á) ‚Äî ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡πÄ‡∏•‡πà‡∏°‡πÉ‡∏ô state
  // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏¥‡∏° .filter(b => b.isUserAdded) ‡∏Å‡πà‡∏≠‡∏ô map
  const uniqueAuthors = [
    ...new Set(
      books
        // .filter((b) => b.isUserAdded) // <‚Äî uncomment ‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°
        .map((b) => b.author)
        .filter(Boolean)
    ),
  ].sort();

  // ‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á
  const filteredBooks = books.filter((book) => {
    // ‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user-added: ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
    // if (!book.isUserAdded) return false;

    const matchesAuthor =
      !filterCriteria.author || book.author === filterCriteria.author;
    return matchesAuthor;
  });

  return (
    <div className="app">
      <header className="app-header">
        <h1>Book Catalog v4</h1>
      </header>

      <main className="content">
        <div className="content-add">
          {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå */}
          <BookFilter
            filterCriteria={filterCriteria}
            onFilterChange={handleFilterChange}
            authors={uniqueAuthors}
          />

          {/* ‡∏õ‡∏∏‡πà‡∏° Add + modal */}
          <Modal btnLabel="Add" btnClassName="button-add">
            <AddBook onAdd={handleAddBook} />
          </Modal>

          {/* ‡∏õ‡∏∏‡πà‡∏° Update / Delete */}
          <div className="action-buttons">
            <button className="button-update" onClick={handleUpdateBook}>
              Edit
            </button>
            <button className="button-delete" onClick={handleDeleteBook}>
              Delete
            </button>
          </div>
        </div>

        {/* ‡πÉ‡∏ä‡πâ filteredBooks ‡πÅ‡∏ó‡∏ô books */}
        <BookTile books={filteredBooks} onSelect={toggleSelect} />
      </main>

      <footer className="footer">
        <p>¬© Pat Sricome, 2025</p>
      </footer>
    </div>
  );
}

function BookTile({ books, onSelect }) {
  if (books.length === 0) {
    return (
      <div className="content-books">
        <p style={{ color: "gray" }}>No books found.</p>
      </div>
    );
  }

  return (
    <div className="content-books">
      {books.map((book) => (
        <Book
          key={book.isbn13}
          title={book.title}
          author={book.author}
          image={book.image}
          selected={book.selected}
          onSelect={() => onSelect(book.isbn13)}
        />
      ))}
    </div>
  );
}

export default App;
